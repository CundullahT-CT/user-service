version: 2

executors:
  my-executor:
    docker:
      - image: circleci/openjdk:11-jdk
    working_directory: ~/ticketing-app

jobs:
  prep-dependencies:

    executor: my-executor

    steps:

      - checkout

      - run: cd ~

      - run: mkdir -p /ticketing-app

      - restore_cache:
          keys:
            - ticketing-security-dependencies-{{ checksum "pom.xml" }}

      - run: mvn clean install

      - save_cache:
          paths:
            - ~/.m2
          key: ticketing-security-dependencies-{{ checksum "pom.xml" }}

      - persist_to_workspace:
          root: ~/ticketing-app
          paths:
            - .

  docker-image-create:

    machine: true

    steps:
      - attach_workspace:
          at: ~/ticketing-app
      - run:
          name: Create Docker image and tag it
          command: docker build -t 309373202297.dkr.ecr.eu-central-1.amazonaws.com/ticketingapp:latest ~/ticketing-app

  docker-image-push:

    machine: true

    steps:
      - attach_workspace:
          at: ~/ticketing-app
      - run:
          name: Login to ECR
          command: aws ecr get-login-password --region eu-central-1 | docker login --username AWS --password-stdin 309373202297.dkr.ecr.eu-central-1.amazonaws.com
      - run:
          name: Push the image to ECR
          command: docker push 309373202297.dkr.ecr.eu-central-1.amazonaws.com/ticketingapp:latest

  deploy:
    machine: true
    steps:
      - run:
          name: Execute Deployment Script
          command: |
            ssh -o "StrictHostKeyChecking=no" ec2-3-75-173-107.eu-central-1.compute.amazonaws.com <<'ENDSSH'
            /bin/bash bin/deploy_image.sh
            ENDSSH

workflows:

  version: 2

  build_and_deploy:
    jobs:
      - prep-dependencies
      - docker-image-create:
          requires:
            - prep-dependencies
      - docker-image-push:
          requires:
            - docker-image-create
      - deploy:
          requires:
            - docker-image-push
